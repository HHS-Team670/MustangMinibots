/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

plugins{
    id "base"
    id 'java-library'
    id "jaci.gradle.EmbeddedTools" version "2019.11.13"
}

def ROBOT_MAIN_CLASS = "Main"

task zip(type: Zip, group: "Archive", description: "Archives sources in a zip file") {
    from "src"
    setArchiveName "basic-demo-1.0.zip"
}

deploy {
    targets {
        target("rpi") {
            directory = '/home/pi/Projects'  // The root directory to start deploying to. Default: user home
            maxChannels = 1         // The number of channels to open on the target (how many files / commands to run at the same time). Default: 1
            timeout = 3             // Timeout to use when connecting to target. Default: 3 (seconds)
            failOnMissing = true    // Should the build fail if the target can't be found? Default: true

            locations {
                ssh {
                    address = "192.168.4.1"  // Required. The address to try
                    user = 'pi'             // Required. The user to login as
                    password = 'sadmin08282019'               // The password for the user. Default: blank (empty) string
                    ipv6 = false                // Are IPv6 addresses permitted? Default: false
                }
            }
        }
    }
    artifacts {
        // Define my artifact. In this case, the default java build for this project.
        javaArtifact('coprocessorCode') {
            targets << "rpi"
            jar = 'jar'     // This sets the jarfile to deploy. The default jar task in gradle is simply called 'jar'
        }
    }
}

repositories {
    // Since my Apache Commons dependency (defined below) exists in the Maven Central Repository, 
    // I need to define it as a repository for this project.
    mavenCentral()
    // maven{
    //     url 'http://first.wpi.edu/FRC/roborio/maven/release'
    // }
    flatDir {
       dirs 'lib'
   }
}

dependencies {
    // In this case, I'm adding the Apache Commons library for demonstration purposes.
    // (This library isn't actually needed, but serves the purpose of demonstrating how
    // to add a custom library)
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    // compile group: 'edu.wpi.first.ntcore', name: 'ntcore-java', version: '2019.4.1'
    api "org.ejml:ejml-simple:0.38"
    compile (name:'ntcore-java', ext:'jar')
    compile (name:'ntcore-jni', ext:'jar')
    compile (name:'wpiutil', ext:'jar')

}

jar{
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    // I need to set my manifest up so the coprocessor knows where my main class is
    manifest {
        attributes 'Main-Class': ROBOT_MAIN_CLASS
    }
}

// def wpilibNumberFileInput = file("src/generate/GenericNumber.java.in")
// def natFileInput = file("src/generate/Nat.java.in")
// def natGetterInput = file("src/generate/NatGetter.java.in")
// def wpilibNumberFileOutputDir = file("$buildDir/generated/java/edu/wpi/first/wpiutil/math/numbers")
// def wpilibNatFileOutput = file("$buildDir/generated/java/edu/wpi/first/wpiutil/math/Nat.java")
// def maxNum = 20

// task generateNumbers() {
//     description = "Generates generic number classes from template"
//     group = "WPILib"

//     inputs.file wpilibNumberFileInput
//     outputs.dir wpilibNumberFileOutputDir

//     doLast {
//         if(wpilibNumberFileOutputDir.exists()) {
//             wpilibNumberFileOutputDir.delete()
//         }
//         wpilibNumberFileOutputDir.mkdirs()

//         for(i in 0..maxNum) {
//             def outputFile = new File(wpilibNumberFileOutputDir, "N${i}.java")
//             def read = wpilibNumberFileInput.text.replace('${num}', i.toString())
//             outputFile.write(read)
//         }
//     }
// }

// task generateNat() {
//     description = "Generates Nat.java"
//     group = "WPILib"
//     inputs.files([natFileInput, natGetterInput])
//     outputs.file wpilibNatFileOutput
//     dependsOn generateNumbers

//     doLast {
//         if(wpilibNatFileOutput.exists()) {
//             wpilibNatFileOutput.delete()
//         }

//         def template = natFileInput.text + "\n"

//         def importsString = "";

//         for(i in 0..maxNum) {
//             importsString += "import edu.wpi.first.wpiutil.math.numbers.N${i};\n"
//             template += natGetterInput.text.replace('${num}', i.toString()) + "\n"
//         }
//         template += "}\n" // Close the class body

//         template = template.replace('{{REPLACEWITHIMPORTS}}', importsString)

//         wpilibNatFileOutput.write(template)
//     }
// }

// sourceSets.main.java.srcDir "${buildDir}/generated/java"
// compileJava.dependsOn generateNumbers
// compileJava.dependsOn generateNat
